{"version":3,"file":"relate.js","sources":["../../../home/runner/work/dbcls-haplotype-stanza/dbcls-haplotype-stanza/stanzas/relate/index.js"],"sourcesContent":["import Stanza from 'togostanza/stanza';\n\nexport default class Gfa extends Stanza {\n  async render() {\n    const self = this;\n    self.renderTemplate(\n      {\n        template: 'stanza.html.hbs',\n        parameters: {\n          greeting: `Hello, ${self.params['say-to']}!`\n        }\n      }\n    );\n\n    // config\n    const CONF = {\n      padding: 10,\n      sectionSize: {\n        cluster: 0.5,\n        mutation: 0.5,\n      },\n    };\n\n    let ethnicitiesOfHaplotypes, haplotypes, mutations, trees, mutationsByHaplotype;\n    const stageRect = (() => {\n      const svgRect = self.root.querySelector(\"#svg\").getBoundingClientRect();\n      return {\n        width: svgRect.width - CONF.padding * 2,\n        height: svgRect.height - CONF.padding * 2,\n      };\n    })();\n\n    // prepare svg\n    (() => {\n      const mutationGroup = self.root.querySelector(\"#mutations\");\n      mutationGroup.setAttributeNS(\n        null,\n        \"transform\",\n        `translate(${CONF.padding}, ${CONF.sectionSize.cluster * stageRect.height + CONF.padding\n        })`\n      );\n    })();\n\n    parseData();\n    self.root.querySelector('#parseDataButton').addEventListener('click', parseData);\n    function parseData() {\n      // ethnicity of these haplotypes\n      ethnicitiesOfHaplotypes = getEthnicitiesOfHaplotypes();\n\n      // haplotypes\n      haplotypes = getHaplotypes();\n      console.log(haplotypes);\n      makeStyleSheet();\n\n      // .mut\n      mutations = getMutations();\n      console.log(mutations);\n\n      // .anc\n      trees = getTrees();\n      console.log(trees[0]);\n\n      getMutationsByHaplotype();\n\n      // set options in selector\n      const select = self.root.querySelector(\"#trees\");\n      select.innerHTML = trees\n        .map(\n          (tree, index) =>\n            `<option value=\"${index}\">Tree${index + 1}: ${tree.region.start}-${tree.region.end\n            }</option>`\n        )\n        .join(\"\");\n\n      // draw mutation\n      drawMutations();\n    }\n\n    self.root.querySelector(\"#drawDendrogramButton\").addEventListener(\"click\", drawDendrogram);\n    function drawDendrogram() {\n      // select tree\n      const treeIndex = parseInt(self.root.querySelector(\"#trees\").value, 10);\n      const tree = trees[treeIndex].branches;\n\n      // get bottom branches\n      const terminalBranches = [];\n      const rootBranch = tree.find((branch) => branch.parentBranchId === -1);\n      const getChildBranches = (branch) => {\n        if (branch.children == null) {\n          terminalBranches.push(branch);\n        } else {\n          for (let child of branch.children) {\n            getChildBranches(child);\n          }\n        }\n      };\n      getChildBranches(rootBranch);\n\n      // move label positions to branch positions\n      window.requestAnimationFrame(() => {\n        for (let i = 0; i < terminalBranches.length; i++) {\n          const branch = terminalBranches[i];\n          console.log(branch);\n          const haplotype = haplotypes[branch.branchId];\n          const branchLine = document.querySelector(\n            `#dendrogram > line[data-branch-id=\"${branch.branchId}\"]`\n          );\n          console.log(branchLine);\n          const g = document.querySelector(\n            `#mutations > g[data-index=\"${branchLine.dataset.branchId}\"]`\n          );\n          console.log(g, +g.dataset.index);\n          g.setAttribute(\n            \"transform\",\n            `translate(${+branchLine.dataset.index * minGap}, 0)`\n          );\n        }\n      });\n\n      // get over-all length\n      let branch = tree[0];\n      let overAllLength = branch.distance;\n      while (true) {\n        const parentBranch = tree.find(\n          (parentBranch) => parentBranch.branchId === branch.parentBranchId\n        );\n        if (parentBranch == null) break;\n        overAllLength += parentBranch.distance;\n        branch = parentBranch;\n      }\n\n      // clear svg\n      const svgDendrogram = self.root.querySelector(\"#dendrogram\");\n      while (svgDendrogram.firstChild) {\n        svgDendrogram.removeChild(svgDendrogram.firstChild);\n      }\n      // draw\n      const minGap = stageRect.width / haplotypes.length;\n      const yRatio = (stageRect.height * CONF.sectionSize.cluster) / overAllLength;\n      // branch whose parent branch is not drawn\n      const drawnBranches = [];\n      const existingSiblingBranches = [];\n\n      // // draw label of haplotypes\n      // for (let i = 0; i < haplotypes.length; i++) {\n      //   const branch = terminalBranches[i];\n      //   const haplotype = haplotypes[branch.branchId];\n      //   const ethnic = ethnicitiesOfHaplotypes.find(\n      //     (eoh) => eoh.sampleid === haplotype\n      //   );\n      //   const g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n      //   g.setAttribute(\n      //     \"transform\",\n      //     `translate(${minGap * (i - 1) + CONF.padding}, 0)`\n      //   );\n      //   svgMutationGroup.appendChild(g);\n      //   const text = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n      //   text.setAttribute(\"text-anchor\", \"start\");\n      //   text.setAttribute(\"dominant-baseline\", \"central\");\n      //   text.setAttribute(\"transform\", \"rotate(90)\");\n      //   text.classList.add(\"haplotype-label\");\n      //   text.textContent = `${haplotype}${\n      //     ethnic ? ` (${ethnic.popname}/${ethnic.gpopname})` : \"\"\n      //   }`;\n      //   g.appendChild(text);\n      // }\n\n      // draw terminal branches\n      for (let i = 0; i < terminalBranches.length; i++) {\n        const branch = terminalBranches[i];\n        const haplotype = haplotypes[branch.branchId];\n        const ethnic = ethnicitiesOfHaplotypes.find(\n          (eoh) => eoh.sampleid === haplotype\n        );\n        const x = minGap * i;\n        const y = stageRect.height * CONF.sectionSize.cluster;\n        const line = createLine(x, x, y, y - branch.distance * yRatio);\n        line.setAttribute(\"data-index\", i);\n        line.setAttribute(\"data-branch-id\", branch.branchId);\n        line.setAttribute(\"data-parent-branch-id\", branch.parentBranchId);\n        ethnic ? line.setAttribute(\"data-ethnic\", ethnic.popname) : \"\";\n        line.ethnic = ethnic;\n        svgDendrogram.appendChild(line);\n        branch.line = line;\n        const siblingBranch = drawnBranches.find(\n          (drawnBranch) => drawnBranch.parentBranchId === branch.parentBranchId\n        );\n        if (siblingBranch) existingSiblingBranches.push(siblingBranch);\n        drawnBranches.push(branch);\n      }\n\n      // draw other branches\n      const undrawnBranches = [...tree];\n      // remove terminal branches from undrawnBranches\n      for (let terminalBranch of terminalBranches) {\n        const index = undrawnBranches.findIndex(\n          (branch) => branch.branchId === terminalBranch.branchId\n        );\n        undrawnBranches.splice(index, 1);\n      }\n      while (true) {\n        const childBranches = [existingSiblingBranches.shift()];\n        if (childBranches[0] == undefined) break;\n        childBranches.push(\n          drawnBranches.find(\n            (branch) =>\n              branch.parentBranchId === childBranches[0].parentBranchId &&\n              branch.branchId !== childBranches[0].branchId\n          )\n        );\n        const ethnic = (() =>\n          childBranches[0].line.ethnic &&\n            childBranches[0].line.ethnic.popname ===\n            childBranches[1].line.ethnic?.popname\n            ? childBranches[0].line.ethnic\n            : undefined)();\n        const branch = tree.find(\n          (branch) => branch.branchId === childBranches[0].parentBranchId\n        );\n        // draw branch\n        const x =\n          (childBranches[0].line.x1.baseVal.value +\n            childBranches[1].line.x1.baseVal.value) /\n          2;\n        const y = childBranches[0].line.y2.baseVal.value;\n        const beam = createLine(\n          childBranches[0].line.x1.baseVal.value,\n          childBranches[1].line.x1.baseVal.value,\n          childBranches[0].line.y2.baseVal.value,\n          childBranches[1].line.y2.baseVal.value\n        );\n        ethnic !== undefined\n          ? beam.setAttribute(\"data-ethnic\", ethnic.popname)\n          : \"\";\n        svgDendrogram.appendChild(beam);\n        const line = createLine(x, x, y, y - branch.distance * yRatio);\n        line.dataset.branchId = branch.branchId;\n        line.dataset.parentBranchId = branch.parentBranchId;\n        ethnic !== undefined\n          ? line.setAttribute(\"data-ethnic\", ethnic.popname)\n          : \"\";\n        line.ethnic = ethnic;\n        svgDendrogram.appendChild(line);\n        branch.line = line;\n        const siblingBranche = drawnBranches.find(\n          (drawnBranche) => drawnBranche.parentBranchId === branch.parentBranchId\n        );\n        if (siblingBranche !== undefined)\n          existingSiblingBranches.push(siblingBranche);\n        drawnBranches.push(branch);\n        // remove from undrawnBranches and existingSiblingBranches\n        let index = drawnBranches.indexOf(childBranches[1]);\n        drawnBranches.splice(index, 1);\n      }\n\n      // map mutation\n      const mutationsOfThisTree = mutations.filter(\n        (mutation) => mutation.treeIndex === treeIndex\n      );\n      for (let mutation of mutationsOfThisTree) {\n        if (mutation.isNotMapping) continue;\n        const branch = tree.find(\n          (branch) => branch.branchId === mutation.branchIndices[0]\n        );\n        const x = branch.line.x1.baseVal.value;\n        const y = (branch.line.y1.baseVal.value + branch.line.y2.baseVal.value) / 2;\n        const circle = document.createElementNS(\n          \"http://www.w3.org/2000/svg\",\n          \"circle\"\n        );\n        circle.setAttribute(\"cx\", x);\n        circle.setAttribute(\"cy\", y);\n        circle.setAttribute(\"r\", 3);\n        circle.setAttribute(\"fill\", \"red\");\n        svgDendrogram.appendChild(circle);\n        circle.mutation = mutation;\n        circle.addEventListener(\"mouseover\", () => {\n          console.log(mutation);\n        });\n      }\n    }\n\n    function getMutations() {\n      const mutData = self.root.querySelector(\"#mutData\").value.trim();\n      const lines = mutData.split(\"\\n\").slice(1); // ヘッダー行を除外\n      return lines.map((line) => {\n        const parts = line.split(\";\").map((part) => part.trim());\n        return {\n          snp: parseInt(parts[0], 10),\n          posOfSnp: parseInt(parts[1], 10),\n          dist: parseInt(parts[2], 10),\n          rsId: parts[3],\n          treeIndex: parseInt(parts[4], 10),\n          branchIndices: parts[5].split(\" \").map((index) => parseInt(index, 10)),\n          isNotMapping: parseInt(parts[6], 10),\n          isFlipped: parseInt(parts[7], 10),\n          ageBegin: parseFloat(parts[8]),\n          ageEnd: parseFloat(parts[9]),\n          alleles: parts[10].split(\"/\"),\n        };\n      });\n    }\n\n    function getTrees() {\n      const ancData = self.root.querySelector(\"#ancData\").value.trim().split(\"\\n\");\n      const treesRawData = ancData.slice(2);\n      const startNumbers = treesRawData.map((tree) =>\n        parseInt(tree.match(/^(\\d+)/)[0])\n      );\n      const regions = startNumbers.map((start, index) => {\n        return {\n          start,\n          end: startNumbers[index + 1]\n            ? startNumbers[index + 1] - 1\n            : mutations[mutations.length - 1].snp,\n        };\n      });\n      return treesRawData.map((tree, index) => {\n        const treeData = tree.match(/:\\s*(.+)/)[1];\n        const branches = treeData\n          .split(\") \")\n          .filter((branch) => branch)\n          .map((branch, index) => {\n            // 末尾の閉じカッコを復元（分割で失われるため）\n            branch = branch.trim().endsWith(\")\") ? branch : branch + \")\";\n            const branchParts = branch.match(\n              /(-?\\d+)\\:\\(([\\d\\.]+) ([\\d\\.]+) (-?\\d+) (-?\\d+)\\)/\n            );\n            return {\n              branchId: index,\n              parentBranchId: parseInt(branchParts[1], 10),\n              distance: parseFloat(branchParts[2]),\n              weight: parseFloat(branchParts[3]),\n              branchFrom: parseInt(branchParts[4], 10),\n              branchTo: parseInt(branchParts[5], 10),\n            };\n          });\n        for (let branch of branches) {\n          const children = branches.filter(\n            (child) => child.parentBranchId === branch.branchId\n          );\n          if (children.length > 0) {\n            branch.children = children;\n          }\n        }\n        return { branches, region: regions[index] };\n      });\n    }\n\n    function getMutationsByHaplotype() {\n      const findChildren = (branchId, treeIndex, mutatedBranches) => {\n        mutatedBranches.push(branchId);\n        const branches = trees[treeIndex].branches.filter(\n          (branch) => branch.parentBranchId === branchId\n        );\n        if (branches.length !== 0) {\n          for (let branch of branches) {\n            findChildren(branch.branchId, treeIndex, mutatedBranches);\n          }\n        }\n      };\n\n      mutationsByHaplotype = new Array(haplotypes.length)\n        .fill(null)\n        .map(() => new Array(mutations.length).fill(0));\n      for (let i = 0; i < mutations.length; i++) {\n        const { treeIndex, branchIndices } = mutations[i];\n        const mutatedBranches = [];\n        for (let branchId of branchIndices) {\n          findChildren(branchId, treeIndex, mutatedBranches);\n        }\n        for (let i2 = 0; i2 < mutatedBranches.length; i2++) {\n          if (mutationsByHaplotype[mutatedBranches[i2]])\n            mutationsByHaplotype[mutatedBranches[i2]][i] = 1;\n        }\n      }\n    }\n\n    function createLine(x1, x2, y1, y2) {\n      const line = document.createElementNS(\"http://www.w3.org/2000/svg\", \"line\");\n      line.setAttribute(\"x1\", x1);\n      line.setAttribute(\"y1\", y1);\n      line.setAttribute(\"x2\", x2);\n      line.setAttribute(\"y2\", y2);\n      line.setAttribute(\"stroke\", \"black\");\n      line.setAttribute(\"stroke-width\", 1);\n      return line;\n    }\n\n    function getEthnicitiesOfHaplotypes() {\n      const ethData = self.root.querySelector(\"#ethData\").value.trim();\n      return ethData.split(\"\\n\").map((eth) => {\n        const [sampleid, popname, gpopname] = eth.split(\"\\t\");\n        return { sampleid, popname, gpopname };\n      });\n    }\n\n    function getHaplotypes() {\n      const hapData = self.root.querySelector(\"#hapData\").value.trim();\n      return hapData.split(\"\\n\").map((hap) => hap.split(\".\")[0]);\n    }\n\n    function makeStyleSheet() {\n      // existing ethnicities\n      const existingEthnicities = (() => {\n        let e = haplotypes.reduce((acc, hap) => {\n          const eoh = ethnicitiesOfHaplotypes.find((eoh) => eoh.sampleid === hap);\n          eoh ? acc.push(eoh.popname) : null;\n          return acc;\n        }, []);\n        return Array.from(new Set(e));\n      })();\n      // make stylesheet\n      const ethnicColors = Object.fromEntries(\n        existingEthnicities.map((eth, index) => [\n          eth,\n          `hsl(${(index * 360) / existingEthnicities.length}, 50%, 50%)`,\n        ])\n      );\n      const style = document.createElement(\"style\");\n      document.head.appendChild(style);\n      let styleSheet = style.sheet;\n      for (let eth in ethnicColors) {\n        styleSheet.insertRule(`[data-ethnic=\"${eth}\"] {\n      fill: ${ethnicColors[eth]};\n      stroke: ${ethnicColors[eth]};\n    }`);\n      }\n    }\n\n    function drawMutations() {\n      const svgMutationGroup = self.root.querySelector(\"#mutations\");\n      const minGap = stageRect.width / haplotypes.length;\n      const yRatio =\n        (stageRect.height * CONF.sectionSize.mutation) / mutations.length;\n\n      // draw\n      for (let i = 0; i < haplotypes.length; i++) {\n        const haplotype = haplotypes[i];\n        const ethnic = ethnicitiesOfHaplotypes.find(\n          (eoh) => eoh.sampleid === haplotype\n        );\n        const g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n        g.setAttribute(\"transform\", `translate(${minGap * (i - 1)}, 0)`);\n        g.setAttribute(\"data-haplotype\", haplotype);\n        g.setAttribute(\"data-index\", i);\n        svgMutationGroup.appendChild(g);\n        // draw mutations\n        for (let j = 0; j < mutations.length; j++) {\n          if (mutationsByHaplotype[i][j] === 1) {\n            const x = minGap * i;\n            const y = j * yRatio;\n            const rect = document.createElementNS(\n              \"http://www.w3.org/2000/svg\",\n              \"rect\"\n            );\n            // rect.setAttribute(\"x\", x);\n            rect.setAttribute(\"y\", y);\n            rect.setAttribute(\"width\", minGap);\n            rect.setAttribute(\"height\", yRatio);\n            rect.setAttribute(\"data-haplotype\", haplotype);\n            rect.setAttribute(\"data-mutation\", mutations[j].snp);\n            rect.setAttribute(\"data-position\", j);\n            ethnic ? rect.setAttribute(\"data-ethnic\", ethnic.popname) : \"\";\n            g.appendChild(rect);\n          }\n        }\n        // draw label\n        const text = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n        text.setAttribute(\"text-anchor\", \"start\");\n        text.setAttribute(\"dominant-baseline\", \"central\");\n        text.setAttribute(\"transform\", \"rotate(90)\");\n        text.setAttribute(\"y\", -minGap / 2);\n        text.classList.add(\"haplotype-label\");\n        text.textContent = `${haplotype}${ethnic ? ` (${ethnic.popname}/${ethnic.gpopname})` : \"\"\n          }`;\n        g.appendChild(text);\n      }\n    }\n\n\n  }\n}\n"],"names":[],"mappings":"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"}